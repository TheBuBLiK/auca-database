auca=# CREATE TABLE students (
auca(#     student_id INTEGER PRIMARY KEY,
auca(#     name VARCHAR(100),
auca(#     email VARCHAR(150)
auca(# );
CREATE TABLE
auca=# DROP TABLE students;
DROP TABLE
auca=# CREATE TABLE students (
auca(#     student_id INTEGER,
auca(#     name VARCHAR(100),
auca(#     email VARCHAR(150),
auca(#     PRIMARY KEY (student_id)
auca(# );
CREATE TABLE
auca=# DROP TABLE students;
DROP TABLE
auca=# CREATE TABLE students (
auca(#     student_id INTEGER,
auca(#     name VARCHAR(100),
auca(#     email VARCHAR(150),
auca(#     CONSTRAINT pk_students PRIMARY KEY (student_id)
auca(# );
CREATE TABLE
auca=# DROP TABLE students;
DROP TABLE
auca=# CREATE TABLE students (
auca(#     student_id SERIAL PRIMARY KEY,
auca(#     name VARCHAR(100) NOT NULL,
auca(#     email VARCHAR(150) UNIQUE,
auca(#     faculty VARCHAR(50)
auca(# );
CREATE TABLE
auca=# INSERT INTO students (name, email, faculty) VALUES
auca-# ('Alice Johnson', 'alice@alatoo.edu.kg', 'Computer Science'),
auca-# ('Bob Smith', 'bob@alatoo.edu.kg', 'Mathematics'),
auca-# ('Carol Davis', 'carol@alatoo.edu.kg', 'Computer Science');
INSERT 0 3
auca=# DROP TABLE students;
DROP TABLE
auca=# CREATE TABLE course_enrollments (
auca(#     student_id INTEGER,
auca(#     course_id INTEGER,
auca(#     semester VARCHAR(20),
auca(#     enrollment_date DATE DEFAULT CURRENT_DATE,
auca(#     grade CHAR(2),
auca(#     PRIMARY KEY (student_id, course_id, semester)
auca(# );
CREATE TABLE
auca=# INSERT INTO course_enrollments (student_id, course_id, semester, grade) VALUES
auca-# (1, 101, '2024-Spring', 'A'),
auca-# (1, 102, '2024-Spring', 'B+'),
auca-# (2, 101, '2024-Spring', 'A-'),
auca-# (1, 101, '2024-Fall', 'A+');
INSERT 0 4
auca=# CREATE TABLE products (
auca(#     product_id SERIAL PRIMARY KEY,
auca(#     product_name VARCHAR(100) NOT NULL,
auca(#     price DECIMAL(10,2)
auca(# );
CREATE TABLE
auca=# CREATE TABLE transactions (
auca(#     transaction_id BIGSERIAL PRIMARY KEY,  -- Can handle very large numbers
auca(#     amount DECIMAL(15,2),
auca(#     transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
auca(# );
CREATE TABLE
auca=# CREATE TABLE orders (
auca(#     order_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
auca(#     customer_name VARCHAR(100),
auca(#     order_date DATE DEFAULT CURRENT_DATE
auca(# );
CREATE TABLE
auca=# CREATE TABLE customers (
auca(#     customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
auca(#     customer_name VARCHAR(100),
auca(#     email VARCHAR(150)
auca(# );
CREATE TABLE
auca=# INSERT INTO customers (customer_id, customer_name, email)
auca-# VALUES (1000, 'VIP Customer', 'vip@example.com');
INSERT 0 1
auca=# SELECT * FROM customers;
 customer_id | customer_name |      email
-------------+---------------+-----------------
        1000 | VIP Customer  | vip@example.com
(1 row)


auca=# CREATE TABLE departments (
auca(#     dept_id INTEGER PRIMARY KEY,
auca(#     dept_name VARCHAR(100)
auca(# );
CREATE TABLE
auca=#
auca=# INSERT INTO departments VALUES (1, 'Computer Science');
INSERT 0 1
auca=# INSERT INTO departments VALUES (1, 'Mathematics');
ОШИБКА:  повторяющееся значение ключа нарушает ограничение уникальности "departments_pkey"
DETAIL:  Ключ "(dept_id)=(1)" уже существует.
auca=#
